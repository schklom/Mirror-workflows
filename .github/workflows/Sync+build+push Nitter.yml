name: Sync+build+push Nitter

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  get_commits:
    #if: ${{ false }}
    runs-on: ubuntu-latest
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    outputs:
      LOCAL_ORIGINAL_REPO: ${{ steps.commits.outputs.SETLOCAL_ORIGINAL_REPO }}
      REMOTE_ORIGINAL_REPO: ${{ steps.commits.outputs.SETREMOTE_ORIGINAL_REPO }} 
      LOCAL_DOCKERFILE: ${{ steps.commits.outputs.SETLOCAL_DOCKERFILE }}
      REMOTE_DOCKERFILE: ${{ steps.commits.outputs.SETREMOTE_DOCKERFILE }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'Nitter' # branch
      - name: set local and remote latest commit as environment variables
        id: commits
        # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
        # I can't use the original repo because the base image of the Dockerfile only supports amd64
        # https://github.com/zedeus/nitter/issues/399#issuecomment-997263495 => I can use https://github.com/unixfox/periodic-build-with-github-actions/blob/master/nitter/Dockerfile
        run: |
          echo "::set-output name=SETREMOTE_ORIGINAL_REPO::$(git ls-remote https://github.com/zedeus/nitter refs/heads/master | awk '{ print $1 }')"
          echo "::set-output name=LOCAL_ORIGINAL_REPO::$(cat last_sync_with_original_repo_commit_id_original_repo)"
          echo "::set-output name=REMOTE_DOCKERFILE::$(git ls-remote https://github.com/unixfox/periodic-build-with-github-actions refs/heads/master | awk '{ print $1 }')"
          echo "::set-output name=LOCAL_DOCKERFILE::$(cat last_sync_with_original_repo_commit_id_dockerfile)"
  
  repo_sync:
    needs: [get_commits]
    runs-on: ubuntu-latest
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    if: needs.get_commits.outputs.LOCAL_ORIGINAL_REPO != needs.get_commits.outputs.REMOTE_ORIGINAL_REPO || needs.get_commits.outputs.LOCAL_DOCKERFILE != needs.get_commits.outputs.REMOTE_DOCKERFILE
    #if: ${{ false }}
    steps:
      - name: repo-sync
        uses: wei/git-sync@v3
        with:
          source_repo: "https://github.com/unixfox/periodic-build-with-github-actions"
          source_branch: "master"
          destination_repo: "git@github.com:schklom/Mirror-workflows.git"
          destination_branch: "Nitter"
          ssh_private_key: ${{ secrets.GITSYNCACTION }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'Nitter' # branch
      - name: get most recent commit id on original repo, for next comparison on sync ORIGINAL REPO
        run: git ls-remote https://github.com/zedeus/nitter refs/heads/master | awk '{ print $1 }' > last_sync_with_original_repo_commit_id_original_repo
      - name: get most recent commit id on adapted repo, for next comparison on sync DOCKERFILE
        run: git ls-remote https://github.com/unixfox/periodic-build-with-github-actions refs/heads/master | awk '{ print $1 }' > last_sync_with_original_repo_commit_id_dockerfile
      - name: Commit and push the change
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Add last_sync_with_original_repo_commit_id_original_repo + last_sync_with_original_repo_commit_id_dockerfile

  build_push:
    needs: [repo_sync]
    #needs: [get_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'Nitter' # branch
      - name: Checkout Repo goodtiding5/docker-nitter
        uses: actions/checkout@v4
        with:
          repository: "goodtiding5/docker-nitter"
          ref: 'master'
          path: 'nitter-git'
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.4.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.8.0
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Nitter
        uses: docker/build-push-action@v6
        with:
          context: .
          file: nitter/Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          pull: true
          push: true
          tags: |
            schklom/nitter:latest
