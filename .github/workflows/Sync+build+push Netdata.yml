name: Sync+build+push Netdata

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  get_commits:
    runs-on: ubuntu-latest
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    outputs:
      LOCAL: ${{ steps.commits.outputs.SETLOCAL }}
      REMOTE: ${{ steps.commits.outputs.SETREMOTE }} 
    steps:
      - name: set commits as environment variables
        id: commits
        # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
        run: |
          echo "::set-output name=SETREMOTE::$(git ls-remote https://github.com/netdata/netdata.git HEAD | awk '{ print $1 }')"
          echo "::set-output name=SETLOCAL::$(git ls-remote https://github.com/schklom/Mirror-workflows.git refs/heads/Netdata | awk '{ print $1 }')"
  
  repo-sync:
    needs: [get_commits]
    runs-on: ubuntu-latest
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    if: needs.get_commits.outputs.LOCAL != needs.get_commits.outputs.REMOTE
    steps:
      - name: repo-sync
        uses: wei/git-sync@v3
        with:
          source_repo: "https://github.com/netdata/netdata.git"
          source_branch: "master"
          destination_repo: "git@github.com:schklom/Mirror-workflows.git"
          destination_branch: "Netdata"
          ssh_private_key: ${{ secrets.GITSYNCACTION }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: 'Netdata'
      # https://github.com/netdata/netdata/issues/11069#issuecomment-947611170
      #- name: ADD CGROUPS FOR ROOTLESS DOCKER
       # run: |
        #  echo "[plugin:cgroups]" >> system/netdata.conf
         # echo "enable by default cgroups matching =  !*/init.scope  !/system.slice/run-*.scope  /user.slice/*docker-* !/user.slice/* *.scope  /machine.slice/*.service  /kubepods/pod*/*  /kubepods/*/pod*/*  !/kubepods*" >> system/netdata.conf
          #echo "search for cgroups in subpaths matching =  !*/init.scope  !*-qemu  !*.libvirt-qemu  !/init.scope  !/system  !/systemd  !/user  /user*slice  !/lxc/*/*  !/lxc.monitor  !/lxc.payload/*/*  !/lxc.payload.*  *" >> system/netdata.conf
      - name: UPDATE NETWORKING FOR ROOTLESS DOCKER
        run: >-
          sed -i "/        case ',':   \/\/ comma/a\        case '@':" collectors/cgroups.plugin/cgroup-network.c
      # https://github.com/marketplace/actions/git-auto-commit
      - name: pushing web Dockerfile changes to main branch
        uses: stefanzweifel/git-auto-commit-action@v4.15.0
        with:
          # Optional but recommended
          # Defaults to "Apply automatic changes"
          commit_message: Updated repo to work with Raspberry Pi 4
  
  buildandpush:
    needs: [repo-sync]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Netdata' # branch
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Netdata
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          file: Dockerfile
          #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/arm/v7,linux/arm64
          pull: true
          push: true
          tags: |
            schklom/netdata:latest
