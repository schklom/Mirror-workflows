name: Sync+build+push Web-whisper

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'
  workflow_dispatch: # Allows manually triggering from the Actions page

jobs:
  get_commits:
    runs-on: ubuntu-latest
    #if: ${{ false }}
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    outputs:
      LOCAL: ${{ steps.commits.outputs.SETLOCAL }}
      REMOTE: ${{ steps.commits.outputs.SETREMOTE }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      - name: set local and remote latest commit as environment variables
        id: commits
        # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
        run: |
          echo "::set-output name=SETREMOTE::$(git ls-remote https://codeberg.org/pluja/web-whisper HEAD | awk '{ print $1 }')"
          echo "::set-output name=SETLOCAL::$(cat last_sync_with_original_repo_commit_id)"
  
  repo_sync:
    needs: [get_commits]
    #if: ${{ false }}
    runs-on: ubuntu-latest
    # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    if: needs.get_commits.outputs.LOCAL != needs.get_commits.outputs.REMOTE
    steps:
      - name: repo-sync
        uses: wei/git-sync@v3
        with:
          source_repo: "https://codeberg.org/pluja/web-whisper"
          source_branch: "master"
          destination_repo: "git@github.com:schklom/Mirror-workflows.git"
          destination_branch: "Web-whisper"
          ssh_private_key: ${{ secrets.GITSYNCACTION }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      - name: get most recent commit id on original repo, for next comparison on sync
        run: git ls-remote https://codeberg.org/pluja/web-whisper.git HEAD | awk '{ print $1 }' > last_sync_with_original_repo_commit_id
      - name: Commit and push the change
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          commit_message: Add last_sync_with_original_repo_commit_id
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3
        #with:
          #ref: 'Web-whisper'
      #- name: app dockerfile
      #  run: sed -r 's/^FROM ([a-zA-Z]+)(.*)$/FROM arm32v7\/\1\2/' src/app/Dockerfile > src/app/Dockerfile
      #- name: adapt web dockerfile
      #  run: sed -r 's/^FROM abiosoft\/caddy:no-stats$/FROM jessestuart\/caddy/' web/Dockerfile > web/Dockerfile
      # https://github.com/marketplace/actions/git-auto-commit
      #- name: pushing web Dockerfile changes to main branch
      #  uses: stefanzweifel/git-auto-commit-action@v4.16.0
      #  with:
          # Optional but recommended
          # Defaults to "Apply automatic changes"
      #    commit_message: Updated web Dockerfile to work with Raspberry Pi 4

  build_push_backend_tiny:
    needs: [repo_sync]
    #needs: [get_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.4.1
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Choose tiny among (tiny.en tiny base.en base small.en small medium.en medium large)
        run: sed -r 's/^ARG WHISPER_MODEL.*/ARG WHISPER_MODEL=tiny/' backend.Dockerfile > backend.Dockerfile.tiny
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Web-whisper
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./backend.Dockerfile.tiny
          #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            schklom/web-whisper-backend:tiny
      

  build_push_backend_base:
    needs: [repo_sync]
    #needs: [get_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.4.1
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Choose base among (tiny.en tiny base.en base small.en small medium.en medium large)
        run: sed -r 's/^ARG WHISPER_MODEL.*/ARG WHISPER_MODEL=base/' ./backend.Dockerfile > ./backend.Dockerfile.base
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Web-whisper
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./backend.Dockerfile.base
          #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            schklom/web-whisper-backend:base
      
            
  build_push_backend_small:
    needs: [repo_sync]
    #needs: [get_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.4.1
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Choose small among (tiny.en tiny base.en base small.en small medium.en medium large)
        run: sed -r 's/^ARG WHISPER_MODEL.*/ARG WHISPER_MODEL=small/' ./backend.Dockerfile > ./backend.Dockerfile.small
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Web-whisper
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./backend.Dockerfile.small
          #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            schklom/web-whisper-backend:small
      
            
  # build_push_backend_medium:
    # needs: [repo_sync]
    # #needs: [get_commits]
    # runs-on: ubuntu-latest
    # steps:
      # - name: Checkout
        # uses: actions/checkout@v3
        # with:
          # ref: 'Web-whisper' # branch
      # # https://github.com/docker/setup-qemu-action#usage
      # - name: Set up QEMU
        # uses: docker/setup-qemu-action@v2.1.0
        # #with:
          # #image: tonistiigi/binfmt:latest
          # #platforms: all
          # #platforms: arm/v7
      # # https://github.com/marketplace/actions/docker-setup-buildx
      # - name: Set up Docker Buildx
        # id: buildx
        # uses: docker/setup-buildx-action@v2.4.1
        # #with:
          # #install: true
      # #- name: Available platforms
      # #  run: echo ${{ steps.buildx.outputs.platforms }}
      # # https://github.com/docker/login-action#docker-hub
      # - name: Login to Docker Hub
        # uses: docker/login-action@v2
        # with:
          # username: ${{ secrets.DOCKERHUB_USERNAME }}
          # password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      # - name: Choose medium among (tiny.en tiny base.en base small.en small medium.en medium large)
        # run: sed -r 's/^ARG WHISPER_MODEL.*/ARG WHISPER_MODEL=medium/' ./backend.Dockerfile > ./backend.Dockerfile.medium
      # # https://github.com/docker/build-push-action#multi-platform-image
      # - name: Build and push Web-whisper
        # uses: docker/build-push-action@v4.0.0
        # with:
          # context: .
          # file: ./backend.Dockerfile.medium
          # #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          # push: true
          # tags: |
            # schklom/web-whisper-backend:medium
      
            
  # build_push_backend_large:
    # needs: [repo_sync]
    # #needs: [get_commits]
    # runs-on: ubuntu-latest
    # steps:
      # - name: Checkout
        # uses: actions/checkout@v3
        # with:
          # ref: 'Web-whisper' # branch
      # # https://github.com/docker/setup-qemu-action#usage
      # - name: Set up QEMU
        # uses: docker/setup-qemu-action@v2.1.0
        # #with:
          # #image: tonistiigi/binfmt:latest
          # #platforms: all
          # #platforms: arm/v7
      # # https://github.com/marketplace/actions/docker-setup-buildx
      # - name: Set up Docker Buildx
        # id: buildx
        # uses: docker/setup-buildx-action@v2.4.1
        # #with:
          # #install: true
      # #- name: Available platforms
      # #  run: echo ${{ steps.buildx.outputs.platforms }}
      # # https://github.com/docker/login-action#docker-hub
      # - name: Login to Docker Hub
        # uses: docker/login-action@v2
        # with:
          # username: ${{ secrets.DOCKERHUB_USERNAME }}
          # password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      # - name: Choose large among (tiny.en tiny base.en base small.en small medium.en medium large)
        # run: sed -r 's/^ARG WHISPER_MODEL.*/ARG WHISPER_MODEL=large/' ./backend.Dockerfile > ./backend.Dockerfile.large
      # # https://github.com/docker/build-push-action#multi-platform-image
      # - name: Build and push Web-whisper
        # uses: docker/build-push-action@v4.0.0
        # with:
          # context: .
          # file: ./backend.Dockerfile.large
          # #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          # push: true
          # tags: |
            # schklom/web-whisper-backend:large
            
            
  build_push_frontend:
    #if: ${{ false }}
    needs: [repo_sync]
    #needs: [get_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'Web-whisper' # branch
      # https://github.com/docker/setup-qemu-action#usage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        #with:
          #image: tonistiigi/binfmt:latest
          #platforms: all
          #platforms: arm/v7
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.4.1
        #with:
          #install: true
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}
      # https://github.com/docker/login-action#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # https://github.com/docker/build-push-action#multi-platform-image
      - name: Build and push Web-whisper
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./frontend.Dockerfile
          #platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: |
            schklom/web-whisper-frontend:latest
